default_stages: [pre-commit, commit-msg]
default_install_hook_types:
  - pre-commit
  - commit-msg

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-yaml
        args: ["--allow-multiple-documents", "--unsafe"]
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-added-large-files
        args: ["--maxkb=4024"]
      - id: requirements-txt-fixer
      - id: check-merge-conflict
      - id: debug-statements
      - id: pretty-format-json
        args:
          - "--autofix"
          - "--indent=2"
  - repo: https://github.com/TekWizely/pre-commit-golang
    rev: v1.0.0-rc.1 # Use the latest version
    hooks:
      - id: go-fmt
      - id: go-mod-tidy

  - repo: https://github.com/golangci/golangci-lint
    rev: v1.54.2 # Use the latest stable version
    hooks:
      - id: golangci-lint
        args: ["--enable=golint", "--enable=gofmt"]
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker

  - repo: local
    hooks:
      - id: validate-commit-msg
        name: Commit Message is Valid
        language: pygrep
        entry: '^(build|ci|docs|feat|fix|perf|refactor|style|test|revert|hotfix|ops|chore|release)!?(\([a-z]+\))?: (?![A-Z])(?![a-z]+(ed|ing)\s).*$'
        stages: [commit-msg]
        args: [--negate]

      - id: go-vet
        name: go vet
        description: Run go vet on packages
        entry: bash -c 'cd "$(git rev-parse --show-toplevel)" && go vet ./...'
        language: system
        types: [go]
        pass_filenames: false
